{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"toc_visible":true,"mount_file_id":"1jFrgvnNlOGAfnhE61q0Fc5raENj_0gHD","authorship_tag":"ABX9TyPTDJB4Xx0WsvzjzeXHQ9RC"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"jycR23teqd-3"},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns"]},{"cell_type":"markdown","source":["# Read in metro ridership data"],"metadata":{"id":"pBn39xloAa_O"}},{"cell_type":"code","source":["df_ridership = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Total Entries and Exits.csv')\n","df_ridership"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"D0R6mkTnxFz7","executionInfo":{"status":"ok","timestamp":1741326082469,"user_tz":300,"elapsed":81,"user":{"displayName":"Shuo-An Wu","userId":"11531299363119736107"}},"outputId":"5110f4df-a43b-48fd-ed76-8f680a2d1aed"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                             Date  Entries   Exits\n","0      Tuesday, February 25, 2025   513640  510965\n","1       Monday, February 24, 2025   431077  430097\n","2       Sunday, February 23, 2025   191879  192449\n","3     Saturday, February 22, 2025   245046  245686\n","4       Friday, February 21, 2025   378902  378789\n","...                           ...      ...     ...\n","4800    Thursday, January 5, 2012   689346  684267\n","4801   Wednesday, January 4, 2012   666779  661557\n","4802     Tuesday, January 3, 2012   643144  639049\n","4803      Monday, January 2, 2012   189260  184950\n","4804      Sunday, January 1, 2012   149264  146639\n","\n","[4805 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-7d846c25-44cf-4809-9ced-ba8e86c164ce\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Entries</th>\n","      <th>Exits</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Tuesday, February 25, 2025</td>\n","      <td>513640</td>\n","      <td>510965</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Monday, February 24, 2025</td>\n","      <td>431077</td>\n","      <td>430097</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Sunday, February 23, 2025</td>\n","      <td>191879</td>\n","      <td>192449</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Saturday, February 22, 2025</td>\n","      <td>245046</td>\n","      <td>245686</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Friday, February 21, 2025</td>\n","      <td>378902</td>\n","      <td>378789</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4800</th>\n","      <td>Thursday, January 5, 2012</td>\n","      <td>689346</td>\n","      <td>684267</td>\n","    </tr>\n","    <tr>\n","      <th>4801</th>\n","      <td>Wednesday, January 4, 2012</td>\n","      <td>666779</td>\n","      <td>661557</td>\n","    </tr>\n","    <tr>\n","      <th>4802</th>\n","      <td>Tuesday, January 3, 2012</td>\n","      <td>643144</td>\n","      <td>639049</td>\n","    </tr>\n","    <tr>\n","      <th>4803</th>\n","      <td>Monday, January 2, 2012</td>\n","      <td>189260</td>\n","      <td>184950</td>\n","    </tr>\n","    <tr>\n","      <th>4804</th>\n","      <td>Sunday, January 1, 2012</td>\n","      <td>149264</td>\n","      <td>146639</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4805 rows Ã— 3 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7d846c25-44cf-4809-9ced-ba8e86c164ce')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7d846c25-44cf-4809-9ced-ba8e86c164ce button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7d846c25-44cf-4809-9ced-ba8e86c164ce');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-73b2eee7-72b4-44a9-88ee-e7676052709a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-73b2eee7-72b4-44a9-88ee-e7676052709a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-73b2eee7-72b4-44a9-88ee-e7676052709a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_7b6f3082-80d7-416c-81cf-151202df7a69\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_ridership')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_7b6f3082-80d7-416c-81cf-151202df7a69 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_ridership');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_ridership","summary":"{\n  \"name\": \"df_ridership\",\n  \"rows\": 4805,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 4805,\n        \"samples\": [\n          \"Wednesday, March 10, 2021\",\n          \"Wednesday, February 15, 2017\",\n          \"Saturday, December 24, 2022\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Entries\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 239220,\n        \"min\": -25,\n        \"max\": 1005215,\n        \"num_unique_values\": 4787,\n        \"samples\": [\n          177228,\n          292616,\n          58623\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Exits\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 238653,\n        \"min\": 43,\n        \"max\": 960502,\n        \"num_unique_values\": 4785,\n        \"samples\": [\n          696005,\n          690860,\n          652696\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["df_ridership['Date'] = pd.to_datetime(df_ridership['Date'])\n","df_ridership['Day_of_Week'] = df_ridership['Date'].dt.day_name()"],"metadata":{"id":"Z3JVga5Kz3Sk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_ridership"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"ZQV7PR-P0Jug","executionInfo":{"status":"ok","timestamp":1741326084258,"user_tz":300,"elapsed":28,"user":{"displayName":"Shuo-An Wu","userId":"11531299363119736107"}},"outputId":"37fa419f-8dac-471e-a0c4-dcd2c061cead"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Date  Entries   Exits Day_of_Week\n","0    2025-02-25   513640  510965     Tuesday\n","1    2025-02-24   431077  430097      Monday\n","2    2025-02-23   191879  192449      Sunday\n","3    2025-02-22   245046  245686    Saturday\n","4    2025-02-21   378902  378789      Friday\n","...         ...      ...     ...         ...\n","4800 2012-01-05   689346  684267    Thursday\n","4801 2012-01-04   666779  661557   Wednesday\n","4802 2012-01-03   643144  639049     Tuesday\n","4803 2012-01-02   189260  184950      Monday\n","4804 2012-01-01   149264  146639      Sunday\n","\n","[4805 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-e2adcf4b-ea3d-4e23-a331-458d23b4ae8d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Entries</th>\n","      <th>Exits</th>\n","      <th>Day_of_Week</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2025-02-25</td>\n","      <td>513640</td>\n","      <td>510965</td>\n","      <td>Tuesday</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2025-02-24</td>\n","      <td>431077</td>\n","      <td>430097</td>\n","      <td>Monday</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2025-02-23</td>\n","      <td>191879</td>\n","      <td>192449</td>\n","      <td>Sunday</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2025-02-22</td>\n","      <td>245046</td>\n","      <td>245686</td>\n","      <td>Saturday</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2025-02-21</td>\n","      <td>378902</td>\n","      <td>378789</td>\n","      <td>Friday</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4800</th>\n","      <td>2012-01-05</td>\n","      <td>689346</td>\n","      <td>684267</td>\n","      <td>Thursday</td>\n","    </tr>\n","    <tr>\n","      <th>4801</th>\n","      <td>2012-01-04</td>\n","      <td>666779</td>\n","      <td>661557</td>\n","      <td>Wednesday</td>\n","    </tr>\n","    <tr>\n","      <th>4802</th>\n","      <td>2012-01-03</td>\n","      <td>643144</td>\n","      <td>639049</td>\n","      <td>Tuesday</td>\n","    </tr>\n","    <tr>\n","      <th>4803</th>\n","      <td>2012-01-02</td>\n","      <td>189260</td>\n","      <td>184950</td>\n","      <td>Monday</td>\n","    </tr>\n","    <tr>\n","      <th>4804</th>\n","      <td>2012-01-01</td>\n","      <td>149264</td>\n","      <td>146639</td>\n","      <td>Sunday</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4805 rows Ã— 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e2adcf4b-ea3d-4e23-a331-458d23b4ae8d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e2adcf4b-ea3d-4e23-a331-458d23b4ae8d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e2adcf4b-ea3d-4e23-a331-458d23b4ae8d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ab7d9ba4-4608-4f8a-ab0f-65f716e65bb9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ab7d9ba4-4608-4f8a-ab0f-65f716e65bb9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ab7d9ba4-4608-4f8a-ab0f-65f716e65bb9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_f714f941-2417-4163-a647-e615ed5d01f4\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_ridership')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_f714f941-2417-4163-a647-e615ed5d01f4 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_ridership');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_ridership","summary":"{\n  \"name\": \"df_ridership\",\n  \"rows\": 4805,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2012-01-01 00:00:00\",\n        \"max\": \"2025-02-25 00:00:00\",\n        \"num_unique_values\": 4805,\n        \"samples\": [\n          \"2021-03-10 00:00:00\",\n          \"2017-02-15 00:00:00\",\n          \"2022-12-24 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Entries\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 239220,\n        \"min\": -25,\n        \"max\": 1005215,\n        \"num_unique_values\": 4787,\n        \"samples\": [\n          177228,\n          292616,\n          58623\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Exits\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 238653,\n        \"min\": 43,\n        \"max\": 960502,\n        \"num_unique_values\": 4785,\n        \"samples\": [\n          696005,\n          690860,\n          652696\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Day_of_Week\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Tuesday\",\n          \"Monday\",\n          \"Thursday\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":29}]},{"cell_type":"markdown","source":["## For prediction purpose, only keep the dates after pandemic (2020-04-01)\n"],"metadata":{"id":"Trww8eVnAkTB"}},{"cell_type":"code","source":["df_ridership = df_ridership[df_ridership['Date'] >= '2020-04-01'].copy()"],"metadata":{"id":"AWIWz2yg0STO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Convert the 'Date' column to datetime objects\n","df_ridership['Year'] = df_ridership['Date'].dt.year\n","df_ridership['Month'] = df_ridership['Date'].dt.month\n","\n","# Add weekday column (1: weekday/ 0: weekend)\n","df_ridership['Weekday'] = df_ridership['Date'].dt.day_of_week < 5  # Monday=0, Sunday=6\n","df_ridership['Weekday'] = df_ridership['Weekday'].astype(int)   # transfer weekday into 0/1\n","df_ridership"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"l_vXvicqHVgI","executionInfo":{"status":"ok","timestamp":1741326119129,"user_tz":300,"elapsed":103,"user":{"displayName":"Shuo-An Wu","userId":"11531299363119736107"}},"outputId":"6e3bad5b-3e53-465c-9ef3-f8e740bb9c4d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Date  Entries   Exits Day_of_Week  Year  Month  Weekday\n","0    2025-02-25   513640  510965     Tuesday  2025      2        1\n","1    2025-02-24   431077  430097      Monday  2025      2        1\n","2    2025-02-23   191879  192449      Sunday  2025      2        0\n","3    2025-02-22   245046  245686    Saturday  2025      2        0\n","4    2025-02-21   378902  378789      Friday  2025      2        1\n","...         ...      ...     ...         ...   ...    ...      ...\n","1787 2020-04-05    14165   13485      Sunday  2020      4        0\n","1788 2020-04-04    17847   17053    Saturday  2020      4        0\n","1789 2020-04-03    41436   40117      Friday  2020      4        1\n","1790 2020-04-02    40610   39315    Thursday  2020      4        1\n","1791 2020-04-01    41915   40766   Wednesday  2020      4        1\n","\n","[1792 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-d3439d2c-fc57-43dc-90d9-4578889b9b56\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Entries</th>\n","      <th>Exits</th>\n","      <th>Day_of_Week</th>\n","      <th>Year</th>\n","      <th>Month</th>\n","      <th>Weekday</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2025-02-25</td>\n","      <td>513640</td>\n","      <td>510965</td>\n","      <td>Tuesday</td>\n","      <td>2025</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2025-02-24</td>\n","      <td>431077</td>\n","      <td>430097</td>\n","      <td>Monday</td>\n","      <td>2025</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2025-02-23</td>\n","      <td>191879</td>\n","      <td>192449</td>\n","      <td>Sunday</td>\n","      <td>2025</td>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2025-02-22</td>\n","      <td>245046</td>\n","      <td>245686</td>\n","      <td>Saturday</td>\n","      <td>2025</td>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2025-02-21</td>\n","      <td>378902</td>\n","      <td>378789</td>\n","      <td>Friday</td>\n","      <td>2025</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1787</th>\n","      <td>2020-04-05</td>\n","      <td>14165</td>\n","      <td>13485</td>\n","      <td>Sunday</td>\n","      <td>2020</td>\n","      <td>4</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1788</th>\n","      <td>2020-04-04</td>\n","      <td>17847</td>\n","      <td>17053</td>\n","      <td>Saturday</td>\n","      <td>2020</td>\n","      <td>4</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1789</th>\n","      <td>2020-04-03</td>\n","      <td>41436</td>\n","      <td>40117</td>\n","      <td>Friday</td>\n","      <td>2020</td>\n","      <td>4</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1790</th>\n","      <td>2020-04-02</td>\n","      <td>40610</td>\n","      <td>39315</td>\n","      <td>Thursday</td>\n","      <td>2020</td>\n","      <td>4</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1791</th>\n","      <td>2020-04-01</td>\n","      <td>41915</td>\n","      <td>40766</td>\n","      <td>Wednesday</td>\n","      <td>2020</td>\n","      <td>4</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1792 rows Ã— 7 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d3439d2c-fc57-43dc-90d9-4578889b9b56')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d3439d2c-fc57-43dc-90d9-4578889b9b56 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d3439d2c-fc57-43dc-90d9-4578889b9b56');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e3802eca-1a31-4f5b-a100-119cce2be606\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e3802eca-1a31-4f5b-a100-119cce2be606')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e3802eca-1a31-4f5b-a100-119cce2be606 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_6e6b2793-b816-4b1d-b80d-e57debe505cb\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_ridership')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_6e6b2793-b816-4b1d-b80d-e57debe505cb button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_ridership');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_ridership","summary":"{\n  \"name\": \"df_ridership\",\n  \"rows\": 1792,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2020-04-01 00:00:00\",\n        \"max\": \"2025-02-25 00:00:00\",\n        \"num_unique_values\": 1792,\n        \"samples\": [\n          \"2023-06-08 00:00:00\",\n          \"2024-07-20 00:00:00\",\n          \"2022-04-05 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Entries\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 131028,\n        \"min\": -25,\n        \"max\": 564377,\n        \"num_unique_values\": 1784,\n        \"samples\": [\n          117875,\n          177509,\n          130679\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Exits\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 130956,\n        \"min\": 113,\n        \"max\": 551860,\n        \"num_unique_values\": 1791,\n        \"samples\": [\n          85586,\n          252708,\n          281989\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Day_of_Week\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Tuesday\",\n          \"Monday\",\n          \"Thursday\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          2025,\n          2024,\n          2020\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Month\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          4,\n          5,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Weekday\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":32}]},{"cell_type":"markdown","source":["## Map ridership data with hoildays"],"metadata":{"id":"QWQkFIC7A1Pf"}},{"cell_type":"code","source":["holidays = {\n","    # 2020\n","    '2020-01-01': 'New Year\\'s Day',\n","    '2020-01-20': 'Martin Luther King, Jr. Day',\n","    '2020-02-17': 'Washingtonâ€™s Birthday (Presidentsâ€™ Day)',\n","    '2020-05-25': 'Memorial Day',\n","    '2020-07-03': 'Independence Day (observed)',\n","    '2020-07-04': 'Independence Day',\n","    '2020-09-07': 'Labor Day',\n","    '2020-10-12': 'Columbus Day (Indigenous Peoplesâ€™ Day)',\n","    '2020-11-11': 'Veterans Day',\n","    '2020-11-26': 'Thanksgiving Day',\n","    '2020-12-25': 'Christmas Day',\n","\n","    # 2021\n","    '2021-01-01': 'New Year\\'s Day',\n","    '2021-01-18': 'Martin Luther King, Jr. Day',\n","    '2021-02-15': 'Washingtonâ€™s Birthday (Presidentsâ€™ Day)',\n","    '2021-05-31': 'Memorial Day',\n","    '2021-06-18': 'Juneteenth National Independence Day (observed)',\n","    '2021-06-19': 'Juneteenth National Independence Day',\n","    '2021-07-04': 'Independence Day',\n","    '2021-07-05': 'Independence Day (observed)',\n","    '2021-09-06': 'Labor Day',\n","    '2021-10-11': 'Columbus Day (Indigenous Peoplesâ€™ Day)',\n","    '2021-11-11': 'Veterans Day',\n","    '2021-11-25': 'Thanksgiving Day',\n","    '2021-12-24': 'Christmas Day (observed)',\n","    '2021-12-25': 'Christmas Day',\n","    '2021-12-31': 'New Year\\'s Day (observed)',\n","\n","    # 2022\n","    '2022-01-01': 'New Year\\'s Day',\n","    '2022-01-17': 'Martin Luther King, Jr. Day',\n","    '2022-02-21': 'Washingtonâ€™s Birthday (Presidentsâ€™ Day)',\n","    '2022-05-30': 'Memorial Day',\n","    '2022-06-19': 'Juneteenth National Independence Day',\n","    '2022-06-20': 'Juneteenth National Independence Day (observed)',\n","    '2022-07-04': 'Independence Day',\n","    '2022-09-05': 'Labor Day',\n","    '2022-10-10': 'Columbus Day (Indigenous Peoplesâ€™ Day)',\n","    '2022-11-11': 'Veterans Day',\n","    '2022-11-24': 'Thanksgiving Day',\n","    '2022-12-25': 'Christmas Day',\n","    '2022-12-26': 'Christmas Day (observed)',\n","\n","    # 2023\n","    '2023-01-01': 'New Year\\'s Day',\n","    '2023-01-02': 'New Year\\'s Day (observed)',\n","    '2023-01-16': 'Martin Luther King, Jr. Day',\n","    '2023-02-20': 'Washingtonâ€™s Birthday (Presidentsâ€™ Day)',\n","    '2023-05-29': 'Memorial Day',\n","    '2023-06-19': 'Juneteenth National Independence Day',\n","    '2023-07-04': 'Independence Day',\n","    '2023-09-04': 'Labor Day',\n","    '2023-10-09': 'Columbus Day (Indigenous Peoplesâ€™ Day)',\n","    '2023-11-10': 'Veterans Day (observed)',\n","    '2023-11-11': 'Veterans Day',\n","    '2023-11-23': 'Thanksgiving Day',\n","    '2023-12-25': 'Christmas Day',\n","\n","    # 2024\n","    '2024-01-01': 'New Year\\'s Day',\n","    '2024-01-15': 'Martin Luther King, Jr. Day',\n","    '2024-02-19': 'Washingtonâ€™s Birthday (Presidentsâ€™ Day)',\n","    '2024-05-27': 'Memorial Day',\n","    '2024-06-19': 'Juneteenth National Independence Day',\n","    '2024-07-04': 'Independence Day',\n","    '2024-09-02': 'Labor Day',\n","    '2024-10-14': 'Columbus Day (Indigenous Peoplesâ€™ Day)',\n","    '2024-11-11': 'Veterans Day',\n","    '2024-11-28': 'Thanksgiving Day',\n","    '2024-12-25': 'Christmas Day',\n","\n","    # 2025\n","    '2025-01-01': 'New Year\\'s Day',\n","    '2025-01-20': 'Martin Luther King, Jr. Day',\n","    '2025-02-17': 'Washingtonâ€™s Birthday (Presidentsâ€™ Day)',\n","    '2025-05-26': 'Memorial Day',\n","    '2025-06-19': 'Juneteenth National Independence Day',\n","    '2025-07-04': 'Independence Day',\n","    '2025-09-01': 'Labor Day',\n","    '2025-10-13': 'Columbus Day (Indigenous Peoplesâ€™ Day)',\n","    '2025-11-11': 'Veterans Day',\n","    '2025-11-27': 'Thanksgiving Day',\n","    '2025-12-25': 'Christmas Day'\n","}"],"metadata":{"id":"A4YXECqvHFqm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Create a Series of booleans indicating holidays\n","df_ridership['Holiday'] = df_ridership['Date'].dt.strftime('%Y-%m-%d').isin(holidays.keys())\n","df_ridership['Holiday'] = df_ridership['Holiday'].astype(int)\n","\n","# Add corresponding holiday name\n","df_ridership['HolidayName'] = df_ridership['Date'].dt.strftime('%Y-%m-%d').map(holidays).fillna('')\n","df_ridership"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"fmIQNqG7INng","executionInfo":{"status":"ok","timestamp":1741326199764,"user_tz":300,"elapsed":47,"user":{"displayName":"Shuo-An Wu","userId":"11531299363119736107"}},"outputId":"2a1ff5aa-d695-455f-a0ba-29ca30c4ef6a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Date  Entries   Exits Day_of_Week  Year  Month  Weekday  Holiday  \\\n","0    2025-02-25   513640  510965     Tuesday  2025      2        1        0   \n","1    2025-02-24   431077  430097      Monday  2025      2        1        0   \n","2    2025-02-23   191879  192449      Sunday  2025      2        0        0   \n","3    2025-02-22   245046  245686    Saturday  2025      2        0        0   \n","4    2025-02-21   378902  378789      Friday  2025      2        1        0   \n","...         ...      ...     ...         ...   ...    ...      ...      ...   \n","1787 2020-04-05    14165   13485      Sunday  2020      4        0        0   \n","1788 2020-04-04    17847   17053    Saturday  2020      4        0        0   \n","1789 2020-04-03    41436   40117      Friday  2020      4        1        0   \n","1790 2020-04-02    40610   39315    Thursday  2020      4        1        0   \n","1791 2020-04-01    41915   40766   Wednesday  2020      4        1        0   \n","\n","     HolidayName  \n","0                 \n","1                 \n","2                 \n","3                 \n","4                 \n","...          ...  \n","1787              \n","1788              \n","1789              \n","1790              \n","1791              \n","\n","[1792 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-90c26c6a-a992-4da7-a76b-3f373adf09e9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Entries</th>\n","      <th>Exits</th>\n","      <th>Day_of_Week</th>\n","      <th>Year</th>\n","      <th>Month</th>\n","      <th>Weekday</th>\n","      <th>Holiday</th>\n","      <th>HolidayName</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2025-02-25</td>\n","      <td>513640</td>\n","      <td>510965</td>\n","      <td>Tuesday</td>\n","      <td>2025</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2025-02-24</td>\n","      <td>431077</td>\n","      <td>430097</td>\n","      <td>Monday</td>\n","      <td>2025</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2025-02-23</td>\n","      <td>191879</td>\n","      <td>192449</td>\n","      <td>Sunday</td>\n","      <td>2025</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2025-02-22</td>\n","      <td>245046</td>\n","      <td>245686</td>\n","      <td>Saturday</td>\n","      <td>2025</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2025-02-21</td>\n","      <td>378902</td>\n","      <td>378789</td>\n","      <td>Friday</td>\n","      <td>2025</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1787</th>\n","      <td>2020-04-05</td>\n","      <td>14165</td>\n","      <td>13485</td>\n","      <td>Sunday</td>\n","      <td>2020</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>1788</th>\n","      <td>2020-04-04</td>\n","      <td>17847</td>\n","      <td>17053</td>\n","      <td>Saturday</td>\n","      <td>2020</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>1789</th>\n","      <td>2020-04-03</td>\n","      <td>41436</td>\n","      <td>40117</td>\n","      <td>Friday</td>\n","      <td>2020</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>1790</th>\n","      <td>2020-04-02</td>\n","      <td>40610</td>\n","      <td>39315</td>\n","      <td>Thursday</td>\n","      <td>2020</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>1791</th>\n","      <td>2020-04-01</td>\n","      <td>41915</td>\n","      <td>40766</td>\n","      <td>Wednesday</td>\n","      <td>2020</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td></td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1792 rows Ã— 9 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-90c26c6a-a992-4da7-a76b-3f373adf09e9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-90c26c6a-a992-4da7-a76b-3f373adf09e9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-90c26c6a-a992-4da7-a76b-3f373adf09e9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f1ae2b89-4c5d-46ce-8870-13b60cfe38d2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f1ae2b89-4c5d-46ce-8870-13b60cfe38d2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f1ae2b89-4c5d-46ce-8870-13b60cfe38d2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_2c34bc4f-42c0-4406-9877-e3736cf8cf1b\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_ridership')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_2c34bc4f-42c0-4406-9877-e3736cf8cf1b button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_ridership');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_ridership","summary":"{\n  \"name\": \"df_ridership\",\n  \"rows\": 1792,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2020-04-01 00:00:00\",\n        \"max\": \"2025-02-25 00:00:00\",\n        \"num_unique_values\": 1792,\n        \"samples\": [\n          \"2023-06-08 00:00:00\",\n          \"2024-07-20 00:00:00\",\n          \"2022-04-05 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Entries\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 131028,\n        \"min\": -25,\n        \"max\": 564377,\n        \"num_unique_values\": 1784,\n        \"samples\": [\n          117875,\n          177509,\n          130679\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Exits\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 130956,\n        \"min\": 113,\n        \"max\": 551860,\n        \"num_unique_values\": 1791,\n        \"samples\": [\n          85586,\n          252708,\n          281989\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Day_of_Week\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Tuesday\",\n          \"Monday\",\n          \"Thursday\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          2025,\n          2024,\n          2020\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Month\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          4,\n          5,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Weekday\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Holiday\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"HolidayName\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 17,\n        \"samples\": [\n          \"\",\n          \"Washington\\u2019s Birthday (Presidents\\u2019 Day)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["# print holidays\n","df_ridership[df_ridership['Holiday'] == True]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"3_TQcLXTIZCe","executionInfo":{"status":"ok","timestamp":1741326240682,"user_tz":300,"elapsed":67,"user":{"displayName":"Shuo-An Wu","userId":"11531299363119736107"}},"outputId":"89f9a657-2a11-4595-e5cf-6d126cdf66c4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Date  Entries   Exits Day_of_Week  Year  Month  Weekday  Holiday  \\\n","8    2025-02-17   234803  235096      Monday  2025      2        1        1   \n","36   2025-01-20   263547  264012      Monday  2025      1        1        1   \n","55   2025-01-01   130412  130631   Wednesday  2025      1        1        1   \n","62   2024-12-25    61690   61876   Wednesday  2024     12        1        1   \n","89   2024-11-28    94258   93775    Thursday  2024     11        1        1   \n","...         ...      ...     ...         ...   ...    ...      ...      ...   \n","1597 2020-10-12    56770   54567      Monday  2020     10        1        1   \n","1632 2020-09-07    42066   40266      Monday  2020      9        1        1   \n","1697 2020-07-04    37144   35734    Saturday  2020      7        0        1   \n","1698 2020-07-03    41076   39414      Friday  2020      7        1        1   \n","1737 2020-05-25    18321   17263      Monday  2020      5        1        1   \n","\n","                                  HolidayName  \n","8     Washingtonâ€™s Birthday (Presidentsâ€™ Day)  \n","36                Martin Luther King, Jr. Day  \n","55                             New Year's Day  \n","62                              Christmas Day  \n","89                           Thanksgiving Day  \n","...                                       ...  \n","1597   Columbus Day (Indigenous Peoplesâ€™ Day)  \n","1632                                Labor Day  \n","1697                         Independence Day  \n","1698              Independence Day (observed)  \n","1737                             Memorial Day  \n","\n","[63 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-a9562c51-2ebe-4ceb-a477-c352e9359973\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Entries</th>\n","      <th>Exits</th>\n","      <th>Day_of_Week</th>\n","      <th>Year</th>\n","      <th>Month</th>\n","      <th>Weekday</th>\n","      <th>Holiday</th>\n","      <th>HolidayName</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>8</th>\n","      <td>2025-02-17</td>\n","      <td>234803</td>\n","      <td>235096</td>\n","      <td>Monday</td>\n","      <td>2025</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Washingtonâ€™s Birthday (Presidentsâ€™ Day)</td>\n","    </tr>\n","    <tr>\n","      <th>36</th>\n","      <td>2025-01-20</td>\n","      <td>263547</td>\n","      <td>264012</td>\n","      <td>Monday</td>\n","      <td>2025</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Martin Luther King, Jr. Day</td>\n","    </tr>\n","    <tr>\n","      <th>55</th>\n","      <td>2025-01-01</td>\n","      <td>130412</td>\n","      <td>130631</td>\n","      <td>Wednesday</td>\n","      <td>2025</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>New Year's Day</td>\n","    </tr>\n","    <tr>\n","      <th>62</th>\n","      <td>2024-12-25</td>\n","      <td>61690</td>\n","      <td>61876</td>\n","      <td>Wednesday</td>\n","      <td>2024</td>\n","      <td>12</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Christmas Day</td>\n","    </tr>\n","    <tr>\n","      <th>89</th>\n","      <td>2024-11-28</td>\n","      <td>94258</td>\n","      <td>93775</td>\n","      <td>Thursday</td>\n","      <td>2024</td>\n","      <td>11</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Thanksgiving Day</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1597</th>\n","      <td>2020-10-12</td>\n","      <td>56770</td>\n","      <td>54567</td>\n","      <td>Monday</td>\n","      <td>2020</td>\n","      <td>10</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Columbus Day (Indigenous Peoplesâ€™ Day)</td>\n","    </tr>\n","    <tr>\n","      <th>1632</th>\n","      <td>2020-09-07</td>\n","      <td>42066</td>\n","      <td>40266</td>\n","      <td>Monday</td>\n","      <td>2020</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Labor Day</td>\n","    </tr>\n","    <tr>\n","      <th>1697</th>\n","      <td>2020-07-04</td>\n","      <td>37144</td>\n","      <td>35734</td>\n","      <td>Saturday</td>\n","      <td>2020</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>Independence Day</td>\n","    </tr>\n","    <tr>\n","      <th>1698</th>\n","      <td>2020-07-03</td>\n","      <td>41076</td>\n","      <td>39414</td>\n","      <td>Friday</td>\n","      <td>2020</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Independence Day (observed)</td>\n","    </tr>\n","    <tr>\n","      <th>1737</th>\n","      <td>2020-05-25</td>\n","      <td>18321</td>\n","      <td>17263</td>\n","      <td>Monday</td>\n","      <td>2020</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Memorial Day</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>63 rows Ã— 9 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a9562c51-2ebe-4ceb-a477-c352e9359973')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a9562c51-2ebe-4ceb-a477-c352e9359973 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a9562c51-2ebe-4ceb-a477-c352e9359973');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8136750e-846b-4db2-92f9-3b3e54b6f459\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8136750e-846b-4db2-92f9-3b3e54b6f459')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8136750e-846b-4db2-92f9-3b3e54b6f459 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df_ridership[df_ridership['Holiday'] == True]\",\n  \"rows\": 63,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2020-05-25 00:00:00\",\n        \"max\": \"2025-02-17 00:00:00\",\n        \"num_unique_values\": 63,\n        \"samples\": [\n          \"2020-07-03 00:00:00\",\n          \"2020-11-11 00:00:00\",\n          \"2025-02-17 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Entries\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 94524,\n        \"min\": 14249,\n        \"max\": 447153,\n        \"num_unique_values\": 63,\n        \"samples\": [\n          41076,\n          59415,\n          234803\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Exits\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 95984,\n        \"min\": 13073,\n        \"max\": 464740,\n        \"num_unique_values\": 63,\n        \"samples\": [\n          39414,\n          56721,\n          235096\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Day_of_Week\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Monday\",\n          \"Wednesday\",\n          \"Tuesday\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          2025,\n          2024,\n          2020\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Month\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          6,\n          1,\n          9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Weekday\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Holiday\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 1,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"HolidayName\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 16,\n        \"samples\": [\n          \"Washington\\u2019s Birthday (Presidents\\u2019 Day)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":35}]},{"cell_type":"markdown","source":["# Read in the cleaned weather files (2020-2025)\n"],"metadata":{"id":"OzqWR1XgAQ3C"}},{"cell_type":"code","source":["# Define the base file path\n","base_path = '/content/drive/MyDrive/Colab Notebooks/weather/cleaned_{}_weather.csv'\n","\n","# Create an empty list to store the dataframes\n","dfs = []\n","\n","# Loop through the years and read each CSV file\n","for year in range(2020, 2026):\n","  file_path = base_path.format(year)\n","  try:\n","    # Read the CSV file into a pandas DataFrame\n","    df = pd.read_csv(file_path)\n","    # Add the year to the dataframe as a column\n","    df['Year'] = year\n","    dfs.append(df)\n","  except FileNotFoundError:\n","    print(f\"File not found for year {year}: {file_path}\")\n","\n","\n","# Concatenate all the dataframes in the list\n","weather_data = pd.concat(dfs, ignore_index=True)\n","\n","# Display the first few rows of the combined DataFrame\n","weather_data.head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"UYeloX1-C2jC","executionInfo":{"status":"ok","timestamp":1741326277859,"user_tz":300,"elapsed":84,"user":{"displayName":"Shuo-An Wu","userId":"11531299363119736107"}},"outputId":"ed76abe2-7ef2-4c73-dd02-d7d47c89e566"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  days__datetime days_day_of_week  days__tempmax  days__tempmin  days__temp  \\\n","0     2020-01-01        Wednesday           51.0           36.2        44.2   \n","1     2020-01-02         Thursday           53.0           32.4        42.2   \n","2     2020-01-03           Friday           53.0           47.0        50.3   \n","3     2020-01-04         Saturday           58.9           46.9        52.8   \n","4     2020-01-05           Sunday           46.0           35.4        40.7   \n","\n","   days__feelslikemax  days__feelslikemin  days__feelslike  days_has_rain  \\\n","0                51.0                32.7             40.5              0   \n","1                53.0                28.3             40.4              0   \n","2                53.0                43.0             48.9              1   \n","3                58.9                40.3             51.8              1   \n","4                39.4                29.5             33.9              0   \n","\n","   days__precip  days__precipprob  days_has_snow  days__precipcover  \\\n","0         0.000                 0              0               0.00   \n","1         0.000                 0              0               0.00   \n","2         0.217               100              0              50.00   \n","3         0.349               100              0              41.67   \n","4         0.000                 0              0               0.00   \n","\n","   days__snow  days__snowdepth  days__windspeed  days__cloudcover  \\\n","0         0.0              0.0             14.7              41.6   \n","1         0.0              0.0              8.8              64.2   \n","2         0.0              0.0             10.8              84.4   \n","3         0.0              0.0             16.7              82.2   \n","4         0.0              0.0             21.5              72.4   \n","\n","   days__visibility  Year  \n","0               9.9  2020  \n","1               9.9  2020  \n","2               9.3  2020  \n","3               7.2  2020  \n","4               9.9  2020  "],"text/html":["\n","  <div id=\"df-5c2aadb1-7ef2-474a-aa92-d876acd70001\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>days__datetime</th>\n","      <th>days_day_of_week</th>\n","      <th>days__tempmax</th>\n","      <th>days__tempmin</th>\n","      <th>days__temp</th>\n","      <th>days__feelslikemax</th>\n","      <th>days__feelslikemin</th>\n","      <th>days__feelslike</th>\n","      <th>days_has_rain</th>\n","      <th>days__precip</th>\n","      <th>days__precipprob</th>\n","      <th>days_has_snow</th>\n","      <th>days__precipcover</th>\n","      <th>days__snow</th>\n","      <th>days__snowdepth</th>\n","      <th>days__windspeed</th>\n","      <th>days__cloudcover</th>\n","      <th>days__visibility</th>\n","      <th>Year</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2020-01-01</td>\n","      <td>Wednesday</td>\n","      <td>51.0</td>\n","      <td>36.2</td>\n","      <td>44.2</td>\n","      <td>51.0</td>\n","      <td>32.7</td>\n","      <td>40.5</td>\n","      <td>0</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>14.7</td>\n","      <td>41.6</td>\n","      <td>9.9</td>\n","      <td>2020</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2020-01-02</td>\n","      <td>Thursday</td>\n","      <td>53.0</td>\n","      <td>32.4</td>\n","      <td>42.2</td>\n","      <td>53.0</td>\n","      <td>28.3</td>\n","      <td>40.4</td>\n","      <td>0</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>8.8</td>\n","      <td>64.2</td>\n","      <td>9.9</td>\n","      <td>2020</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2020-01-03</td>\n","      <td>Friday</td>\n","      <td>53.0</td>\n","      <td>47.0</td>\n","      <td>50.3</td>\n","      <td>53.0</td>\n","      <td>43.0</td>\n","      <td>48.9</td>\n","      <td>1</td>\n","      <td>0.217</td>\n","      <td>100</td>\n","      <td>0</td>\n","      <td>50.00</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>10.8</td>\n","      <td>84.4</td>\n","      <td>9.3</td>\n","      <td>2020</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2020-01-04</td>\n","      <td>Saturday</td>\n","      <td>58.9</td>\n","      <td>46.9</td>\n","      <td>52.8</td>\n","      <td>58.9</td>\n","      <td>40.3</td>\n","      <td>51.8</td>\n","      <td>1</td>\n","      <td>0.349</td>\n","      <td>100</td>\n","      <td>0</td>\n","      <td>41.67</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>16.7</td>\n","      <td>82.2</td>\n","      <td>7.2</td>\n","      <td>2020</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2020-01-05</td>\n","      <td>Sunday</td>\n","      <td>46.0</td>\n","      <td>35.4</td>\n","      <td>40.7</td>\n","      <td>39.4</td>\n","      <td>29.5</td>\n","      <td>33.9</td>\n","      <td>0</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>21.5</td>\n","      <td>72.4</td>\n","      <td>9.9</td>\n","      <td>2020</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5c2aadb1-7ef2-474a-aa92-d876acd70001')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5c2aadb1-7ef2-474a-aa92-d876acd70001 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5c2aadb1-7ef2-474a-aa92-d876acd70001');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0c15a254-3727-4391-9fc8-546e03325715\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0c15a254-3727-4391-9fc8-546e03325715')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0c15a254-3727-4391-9fc8-546e03325715 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"weather_data","summary":"{\n  \"name\": \"weather_data\",\n  \"rows\": 1891,\n  \"fields\": [\n    {\n      \"column\": \"days__datetime\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 1891,\n        \"samples\": [\n          \"2024-12-17\",\n          \"2022-11-21\",\n          \"2020-05-15\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"days_day_of_week\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Wednesday\",\n          \"Thursday\",\n          \"Monday\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"days__tempmax\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16.897765380955665,\n        \"min\": 20.9,\n        \"max\": 102.7,\n        \"num_unique_values\": 440,\n        \"samples\": [\n          84.9,\n          63.9,\n          67.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"days__tempmin\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15.948506988841478,\n        \"min\": 8.9,\n        \"max\": 81.6,\n        \"num_unique_values\": 521,\n        \"samples\": [\n          40.3,\n          45.0,\n          32.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"days__temp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16.050566290992702,\n        \"min\": 14.7,\n        \"max\": 90.8,\n        \"num_unique_values\": 582,\n        \"samples\": [\n          33.9,\n          41.7,\n          62.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"days__feelslikemax\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19.41361203484089,\n        \"min\": 12.2,\n        \"max\": 110.0,\n        \"num_unique_values\": 605,\n        \"samples\": [\n          38.5,\n          60.0,\n          68.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"days__feelslikemin\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19.020587167214586,\n        \"min\": -4.2,\n        \"max\": 87.8,\n        \"num_unique_values\": 612,\n        \"samples\": [\n          51.6,\n          60.9,\n          24.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"days__feelslike\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18.754862484654975,\n        \"min\": 2.6,\n        \"max\": 97.4,\n        \"num_unique_values\": 669,\n        \"samples\": [\n          52.6,\n          82.4,\n          24.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"days_has_rain\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"days__precip\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2991532980289329,\n        \"min\": 0.0,\n        \"max\": 2.683,\n        \"num_unique_values\": 387,\n        \"samples\": [\n          0.453,\n          0.259\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"days__precipprob\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 48,\n        \"min\": 0,\n        \"max\": 100,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          100,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"days_has_snow\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"days__precipcover\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15.602635647230843,\n        \"min\": 0.0,\n        \"max\": 95.83,\n        \"num_unique_values\": 24,\n        \"samples\": [\n          75.0,\n          29.17\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"days__snow\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.10666264876360979,\n        \"min\": 0.0,\n        \"max\": 2.8,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.3,\n          0.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"days__snowdepth\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.48787803727064466,\n        \"min\": 0.0,\n        \"max\": 6.0,\n        \"num_unique_values\": 31,\n        \"samples\": [\n          0.8,\n          0.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"days__windspeed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.937298379757236,\n        \"min\": 5.5,\n        \"max\": 36.4,\n        \"num_unique_values\": 231,\n        \"samples\": [\n          6.9,\n          17.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"days__cloudcover\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 24.079702993877486,\n        \"min\": 0.0,\n        \"max\": 100.0,\n        \"num_unique_values\": 749,\n        \"samples\": [\n          33.3,\n          82.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"days__visibility\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9511888134403615,\n        \"min\": 3.0,\n        \"max\": 9.9,\n        \"num_unique_values\": 60,\n        \"samples\": [\n          9.9,\n          6.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 2020,\n        \"max\": 2025,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          2020,\n          2021\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["weather_data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-KOUjyeDDxy6","executionInfo":{"status":"ok","timestamp":1741326280592,"user_tz":300,"elapsed":17,"user":{"displayName":"Shuo-An Wu","userId":"11531299363119736107"}},"outputId":"aadd6eec-0859-4c31-dcab-5c5075705c7d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1891 entries, 0 to 1890\n","Data columns (total 19 columns):\n"," #   Column              Non-Null Count  Dtype  \n","---  ------              --------------  -----  \n"," 0   days__datetime      1891 non-null   object \n"," 1   days_day_of_week    1891 non-null   object \n"," 2   days__tempmax       1891 non-null   float64\n"," 3   days__tempmin       1891 non-null   float64\n"," 4   days__temp          1891 non-null   float64\n"," 5   days__feelslikemax  1891 non-null   float64\n"," 6   days__feelslikemin  1891 non-null   float64\n"," 7   days__feelslike     1891 non-null   float64\n"," 8   days_has_rain       1891 non-null   int64  \n"," 9   days__precip        1891 non-null   float64\n"," 10  days__precipprob    1891 non-null   int64  \n"," 11  days_has_snow       1891 non-null   int64  \n"," 12  days__precipcover   1891 non-null   float64\n"," 13  days__snow          1096 non-null   float64\n"," 14  days__snowdepth     1137 non-null   float64\n"," 15  days__windspeed     1891 non-null   float64\n"," 16  days__cloudcover    1891 non-null   float64\n"," 17  days__visibility    1891 non-null   float64\n"," 18  Year                1891 non-null   int64  \n","dtypes: float64(13), int64(4), object(2)\n","memory usage: 280.8+ KB\n"]}]},{"cell_type":"markdown","source":["## Data cleaning for weather data"],"metadata":{"id":"DRFJURQKBLSL"}},{"cell_type":"code","source":["weather_data['days__datetime'] = pd.to_datetime(weather_data['days__datetime'])\n","weather_data['days_day_of_week'] = weather_data['days__datetime'].dt.day_name()\n","#weather_data"],"metadata":{"id":"Bkc8UZOADzKf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["weather_data[(weather_data['days__datetime']>='2020-04-01') & (weather_data['days__datetime']<='2025-02-25')]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":444},"id":"eTfFLthbEDA8","executionInfo":{"status":"ok","timestamp":1741326286325,"user_tz":300,"elapsed":72,"user":{"displayName":"Shuo-An Wu","userId":"11531299363119736107"}},"outputId":"99d05d0f-06f0-4f4e-dba7-2c273c9f7f4e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     days__datetime days_day_of_week  days__tempmax  days__tempmin  \\\n","91       2020-04-01        Wednesday           55.9           42.0   \n","92       2020-04-02         Thursday           62.7           42.8   \n","93       2020-04-03           Friday           66.7           47.8   \n","94       2020-04-04         Saturday           58.8           49.9   \n","95       2020-04-05           Sunday           68.0           46.4   \n","...             ...              ...            ...            ...   \n","1878     2025-02-21           Friday           40.6           26.7   \n","1879     2025-02-22         Saturday           42.9           23.8   \n","1880     2025-02-23           Sunday           53.6           28.6   \n","1881     2025-02-24           Monday           56.9           36.2   \n","1882     2025-02-25          Tuesday           67.7           38.7   \n","\n","      days__temp  days__feelslikemax  days__feelslikemin  days__feelslike  \\\n","91          48.2                55.9                34.2             44.4   \n","92          53.6                62.7                37.8             51.9   \n","93          56.5                66.7                42.2             55.4   \n","94          54.3                58.8                45.9             54.2   \n","95          56.8                68.0                43.1             56.0   \n","...          ...                 ...                 ...              ...   \n","1878        32.1                31.2                13.4             21.3   \n","1879        33.7                38.8                17.9             28.3   \n","1880        40.9                53.6                23.6             37.6   \n","1881        45.3                56.9                33.3             43.6   \n","1882        52.2                67.7                36.4             51.3   \n","\n","      days_has_rain  days__precip  days__precipprob  days_has_snow  \\\n","91                1         0.012               100              0   \n","92                0         0.000                 0              0   \n","93                0         0.000                 0              0   \n","94                0         0.000                 0              0   \n","95                0         0.000                 0              0   \n","...             ...           ...               ...            ...   \n","1878              0         0.000                 0              0   \n","1879              0         0.000                 0              0   \n","1880              0         0.000                 0              0   \n","1881              0         0.000                 0              0   \n","1882              0         0.000                 0              0   \n","\n","      days__precipcover  days__snow  days__snowdepth  days__windspeed  \\\n","91                 4.17         0.0              0.0             16.6   \n","92                 0.00         0.0              0.0             26.2   \n","93                 0.00         0.0              0.0             26.5   \n","94                 0.00         0.0              0.0             14.1   \n","95                 0.00         0.0              0.0             10.8   \n","...                 ...         ...              ...              ...   \n","1878               0.00         NaN              NaN             22.5   \n","1879               0.00         NaN              NaN             15.3   \n","1880               0.00         NaN              NaN             12.5   \n","1881               0.00         NaN              NaN             12.7   \n","1882               0.00         NaN              NaN             12.2   \n","\n","      days__cloudcover  days__visibility  Year  \n","91                76.5               9.9  2020  \n","92                21.5               9.9  2020  \n","93                38.3               9.9  2020  \n","94                91.3               9.9  2020  \n","95                61.3               9.9  2020  \n","...                ...               ...   ...  \n","1878              17.3               9.9  2025  \n","1879              44.1               9.9  2025  \n","1880              36.3               9.9  2025  \n","1881              70.3               9.9  2025  \n","1882              59.6               9.9  2025  \n","\n","[1792 rows x 19 columns]"],"text/html":["\n","  <div id=\"df-3e05a35e-6c98-4ed7-8352-9d4d9671cd64\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>days__datetime</th>\n","      <th>days_day_of_week</th>\n","      <th>days__tempmax</th>\n","      <th>days__tempmin</th>\n","      <th>days__temp</th>\n","      <th>days__feelslikemax</th>\n","      <th>days__feelslikemin</th>\n","      <th>days__feelslike</th>\n","      <th>days_has_rain</th>\n","      <th>days__precip</th>\n","      <th>days__precipprob</th>\n","      <th>days_has_snow</th>\n","      <th>days__precipcover</th>\n","      <th>days__snow</th>\n","      <th>days__snowdepth</th>\n","      <th>days__windspeed</th>\n","      <th>days__cloudcover</th>\n","      <th>days__visibility</th>\n","      <th>Year</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>91</th>\n","      <td>2020-04-01</td>\n","      <td>Wednesday</td>\n","      <td>55.9</td>\n","      <td>42.0</td>\n","      <td>48.2</td>\n","      <td>55.9</td>\n","      <td>34.2</td>\n","      <td>44.4</td>\n","      <td>1</td>\n","      <td>0.012</td>\n","      <td>100</td>\n","      <td>0</td>\n","      <td>4.17</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>16.6</td>\n","      <td>76.5</td>\n","      <td>9.9</td>\n","      <td>2020</td>\n","    </tr>\n","    <tr>\n","      <th>92</th>\n","      <td>2020-04-02</td>\n","      <td>Thursday</td>\n","      <td>62.7</td>\n","      <td>42.8</td>\n","      <td>53.6</td>\n","      <td>62.7</td>\n","      <td>37.8</td>\n","      <td>51.9</td>\n","      <td>0</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>26.2</td>\n","      <td>21.5</td>\n","      <td>9.9</td>\n","      <td>2020</td>\n","    </tr>\n","    <tr>\n","      <th>93</th>\n","      <td>2020-04-03</td>\n","      <td>Friday</td>\n","      <td>66.7</td>\n","      <td>47.8</td>\n","      <td>56.5</td>\n","      <td>66.7</td>\n","      <td>42.2</td>\n","      <td>55.4</td>\n","      <td>0</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>26.5</td>\n","      <td>38.3</td>\n","      <td>9.9</td>\n","      <td>2020</td>\n","    </tr>\n","    <tr>\n","      <th>94</th>\n","      <td>2020-04-04</td>\n","      <td>Saturday</td>\n","      <td>58.8</td>\n","      <td>49.9</td>\n","      <td>54.3</td>\n","      <td>58.8</td>\n","      <td>45.9</td>\n","      <td>54.2</td>\n","      <td>0</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>14.1</td>\n","      <td>91.3</td>\n","      <td>9.9</td>\n","      <td>2020</td>\n","    </tr>\n","    <tr>\n","      <th>95</th>\n","      <td>2020-04-05</td>\n","      <td>Sunday</td>\n","      <td>68.0</td>\n","      <td>46.4</td>\n","      <td>56.8</td>\n","      <td>68.0</td>\n","      <td>43.1</td>\n","      <td>56.0</td>\n","      <td>0</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>10.8</td>\n","      <td>61.3</td>\n","      <td>9.9</td>\n","      <td>2020</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1878</th>\n","      <td>2025-02-21</td>\n","      <td>Friday</td>\n","      <td>40.6</td>\n","      <td>26.7</td>\n","      <td>32.1</td>\n","      <td>31.2</td>\n","      <td>13.4</td>\n","      <td>21.3</td>\n","      <td>0</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>22.5</td>\n","      <td>17.3</td>\n","      <td>9.9</td>\n","      <td>2025</td>\n","    </tr>\n","    <tr>\n","      <th>1879</th>\n","      <td>2025-02-22</td>\n","      <td>Saturday</td>\n","      <td>42.9</td>\n","      <td>23.8</td>\n","      <td>33.7</td>\n","      <td>38.8</td>\n","      <td>17.9</td>\n","      <td>28.3</td>\n","      <td>0</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>15.3</td>\n","      <td>44.1</td>\n","      <td>9.9</td>\n","      <td>2025</td>\n","    </tr>\n","    <tr>\n","      <th>1880</th>\n","      <td>2025-02-23</td>\n","      <td>Sunday</td>\n","      <td>53.6</td>\n","      <td>28.6</td>\n","      <td>40.9</td>\n","      <td>53.6</td>\n","      <td>23.6</td>\n","      <td>37.6</td>\n","      <td>0</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>12.5</td>\n","      <td>36.3</td>\n","      <td>9.9</td>\n","      <td>2025</td>\n","    </tr>\n","    <tr>\n","      <th>1881</th>\n","      <td>2025-02-24</td>\n","      <td>Monday</td>\n","      <td>56.9</td>\n","      <td>36.2</td>\n","      <td>45.3</td>\n","      <td>56.9</td>\n","      <td>33.3</td>\n","      <td>43.6</td>\n","      <td>0</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>12.7</td>\n","      <td>70.3</td>\n","      <td>9.9</td>\n","      <td>2025</td>\n","    </tr>\n","    <tr>\n","      <th>1882</th>\n","      <td>2025-02-25</td>\n","      <td>Tuesday</td>\n","      <td>67.7</td>\n","      <td>38.7</td>\n","      <td>52.2</td>\n","      <td>67.7</td>\n","      <td>36.4</td>\n","      <td>51.3</td>\n","      <td>0</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>12.2</td>\n","      <td>59.6</td>\n","      <td>9.9</td>\n","      <td>2025</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1792 rows Ã— 19 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3e05a35e-6c98-4ed7-8352-9d4d9671cd64')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3e05a35e-6c98-4ed7-8352-9d4d9671cd64 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3e05a35e-6c98-4ed7-8352-9d4d9671cd64');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e9b5a442-3183-46eb-9c9f-2116b89840fd\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e9b5a442-3183-46eb-9c9f-2116b89840fd')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e9b5a442-3183-46eb-9c9f-2116b89840fd button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"weather_data[(weather_data['days__datetime']>='2020-04-01') & (weather_data['days__datetime']<='2025-02-25')]\",\n  \"rows\": 1792,\n  \"fields\": [\n    {\n      \"column\": \"days__datetime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2020-04-01 00:00:00\",\n        \"max\": \"2025-02-25 00:00:00\",\n        \"num_unique_values\": 1792,\n        \"samples\": [\n          \"2021-12-20 00:00:00\",\n          \"2020-11-07 00:00:00\",\n          \"2023-02-22 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"days_day_of_week\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Wednesday\",\n          \"Thursday\",\n          \"Monday\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"days__tempmax\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16.89575228008431,\n        \"min\": 20.9,\n        \"max\": 102.7,\n        \"num_unique_values\": 437,\n        \"samples\": [\n          82.3,\n          86.9,\n          51.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"days__tempmin\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15.962426918580785,\n        \"min\": 8.9,\n        \"max\": 81.6,\n        \"num_unique_values\": 515,\n        \"samples\": [\n          62.6,\n          45.4,\n          60.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"days__temp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16.064999332632105,\n        \"min\": 14.7,\n        \"max\": 90.8,\n        \"num_unique_values\": 578,\n        \"samples\": [\n          43.2,\n          30.7,\n          47.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"days__feelslikemax\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19.43221309362257,\n        \"min\": 12.2,\n        \"max\": 110.0,\n        \"num_unique_values\": 599,\n        \"samples\": [\n          89.3,\n          86.5,\n          96.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"days__feelslikemin\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19.001522779970024,\n        \"min\": -4.2,\n        \"max\": 87.8,\n        \"num_unique_values\": 596,\n        \"samples\": [\n          35.9,\n          14.1,\n          50.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"days__feelslike\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18.755228419334514,\n        \"min\": 2.6,\n        \"max\": 97.4,\n        \"num_unique_values\": 657,\n        \"samples\": [\n          83.7,\n          62.8,\n          56.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"days_has_rain\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"days__precip\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3038118782617385,\n        \"min\": 0.0,\n        \"max\": 2.683,\n        \"num_unique_values\": 371,\n        \"samples\": [\n          0.187,\n          0.015\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"days__precipprob\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 48,\n        \"min\": 0,\n        \"max\": 100,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          100\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"days_has_snow\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"days__precipcover\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15.534980363653936,\n        \"min\": 0.0,\n        \"max\": 95.83,\n        \"num_unique_values\": 24,\n        \"samples\": [\n          12.5,\n          87.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"days__snow\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.11136237142108533,\n        \"min\": 0.0,\n        \"max\": 2.8,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.3,\n          0.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"days__snowdepth\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5081029588887411,\n        \"min\": 0.0,\n        \"max\": 6.0,\n        \"num_unique_values\": 31,\n        \"samples\": [\n          0.8,\n          0.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"days__windspeed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.894972925163458,\n        \"min\": 5.5,\n        \"max\": 36.4,\n        \"num_unique_values\": 229,\n        \"samples\": [\n          28.7,\n          18.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"days__cloudcover\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 24.21585882936476,\n        \"min\": 0.0,\n        \"max\": 100.0,\n        \"num_unique_values\": 734,\n        \"samples\": [\n          72.9,\n          33.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"days__visibility\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9518393993098094,\n        \"min\": 3.0,\n        \"max\": 9.9,\n        \"num_unique_values\": 59,\n        \"samples\": [\n          9.9,\n          7.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 2020,\n        \"max\": 2025,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          2020,\n          2021\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":39}]},{"cell_type":"markdown","source":["# Merge ridership data with weather data"],"metadata":{"id":"dnItYYc0BER5"}},{"cell_type":"code","source":["# Merge the two dataframes\n","df_ridership_weather = pd.merge(df_ridership, weather_data,  how='left', left_on='Date', right_on='days__datetime')\n","df_ridership_weather\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":617},"id":"bUeOV0MpEnMC","executionInfo":{"status":"ok","timestamp":1741326299045,"user_tz":300,"elapsed":90,"user":{"displayName":"Shuo-An Wu","userId":"11531299363119736107"}},"outputId":"0cdc162e-2ce6-43c4-ac6e-9247e2005a6e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Date  Entries   Exits Day_of_Week  Year_x  Month  Weekday  Holiday  \\\n","0    2025-02-25   513640  510965     Tuesday    2025      2        1        0   \n","1    2025-02-24   431077  430097      Monday    2025      2        1        0   \n","2    2025-02-23   191879  192449      Sunday    2025      2        0        0   \n","3    2025-02-22   245046  245686    Saturday    2025      2        0        0   \n","4    2025-02-21   378902  378789      Friday    2025      2        1        0   \n","...         ...      ...     ...         ...     ...    ...      ...      ...   \n","1787 2020-04-05    14165   13485      Sunday    2020      4        0        0   \n","1788 2020-04-04    17847   17053    Saturday    2020      4        0        0   \n","1789 2020-04-03    41436   40117      Friday    2020      4        1        0   \n","1790 2020-04-02    40610   39315    Thursday    2020      4        1        0   \n","1791 2020-04-01    41915   40766   Wednesday    2020      4        1        0   \n","\n","     HolidayName days__datetime  ... days__precip  days__precipprob  \\\n","0                    2025-02-25  ...        0.000                 0   \n","1                    2025-02-24  ...        0.000                 0   \n","2                    2025-02-23  ...        0.000                 0   \n","3                    2025-02-22  ...        0.000                 0   \n","4                    2025-02-21  ...        0.000                 0   \n","...          ...            ...  ...          ...               ...   \n","1787                 2020-04-05  ...        0.000                 0   \n","1788                 2020-04-04  ...        0.000                 0   \n","1789                 2020-04-03  ...        0.000                 0   \n","1790                 2020-04-02  ...        0.000                 0   \n","1791                 2020-04-01  ...        0.012               100   \n","\n","      days_has_snow  days__precipcover  days__snow  days__snowdepth  \\\n","0                 0               0.00         NaN              NaN   \n","1                 0               0.00         NaN              NaN   \n","2                 0               0.00         NaN              NaN   \n","3                 0               0.00         NaN              NaN   \n","4                 0               0.00         NaN              NaN   \n","...             ...                ...         ...              ...   \n","1787              0               0.00         0.0              0.0   \n","1788              0               0.00         0.0              0.0   \n","1789              0               0.00         0.0              0.0   \n","1790              0               0.00         0.0              0.0   \n","1791              0               4.17         0.0              0.0   \n","\n","      days__windspeed  days__cloudcover  days__visibility  Year_y  \n","0                12.2              59.6               9.9    2025  \n","1                12.7              70.3               9.9    2025  \n","2                12.5              36.3               9.9    2025  \n","3                15.3              44.1               9.9    2025  \n","4                22.5              17.3               9.9    2025  \n","...               ...               ...               ...     ...  \n","1787             10.8              61.3               9.9    2020  \n","1788             14.1              91.3               9.9    2020  \n","1789             26.5              38.3               9.9    2020  \n","1790             26.2              21.5               9.9    2020  \n","1791             16.6              76.5               9.9    2020  \n","\n","[1792 rows x 28 columns]"],"text/html":["\n","  <div id=\"df-e81f38c5-c3c1-4d90-b282-d08547e5179f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Entries</th>\n","      <th>Exits</th>\n","      <th>Day_of_Week</th>\n","      <th>Year_x</th>\n","      <th>Month</th>\n","      <th>Weekday</th>\n","      <th>Holiday</th>\n","      <th>HolidayName</th>\n","      <th>days__datetime</th>\n","      <th>...</th>\n","      <th>days__precip</th>\n","      <th>days__precipprob</th>\n","      <th>days_has_snow</th>\n","      <th>days__precipcover</th>\n","      <th>days__snow</th>\n","      <th>days__snowdepth</th>\n","      <th>days__windspeed</th>\n","      <th>days__cloudcover</th>\n","      <th>days__visibility</th>\n","      <th>Year_y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2025-02-25</td>\n","      <td>513640</td>\n","      <td>510965</td>\n","      <td>Tuesday</td>\n","      <td>2025</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td></td>\n","      <td>2025-02-25</td>\n","      <td>...</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>12.2</td>\n","      <td>59.6</td>\n","      <td>9.9</td>\n","      <td>2025</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2025-02-24</td>\n","      <td>431077</td>\n","      <td>430097</td>\n","      <td>Monday</td>\n","      <td>2025</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td></td>\n","      <td>2025-02-24</td>\n","      <td>...</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>12.7</td>\n","      <td>70.3</td>\n","      <td>9.9</td>\n","      <td>2025</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2025-02-23</td>\n","      <td>191879</td>\n","      <td>192449</td>\n","      <td>Sunday</td>\n","      <td>2025</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td></td>\n","      <td>2025-02-23</td>\n","      <td>...</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>12.5</td>\n","      <td>36.3</td>\n","      <td>9.9</td>\n","      <td>2025</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2025-02-22</td>\n","      <td>245046</td>\n","      <td>245686</td>\n","      <td>Saturday</td>\n","      <td>2025</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td></td>\n","      <td>2025-02-22</td>\n","      <td>...</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>15.3</td>\n","      <td>44.1</td>\n","      <td>9.9</td>\n","      <td>2025</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2025-02-21</td>\n","      <td>378902</td>\n","      <td>378789</td>\n","      <td>Friday</td>\n","      <td>2025</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td></td>\n","      <td>2025-02-21</td>\n","      <td>...</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>22.5</td>\n","      <td>17.3</td>\n","      <td>9.9</td>\n","      <td>2025</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1787</th>\n","      <td>2020-04-05</td>\n","      <td>14165</td>\n","      <td>13485</td>\n","      <td>Sunday</td>\n","      <td>2020</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td></td>\n","      <td>2020-04-05</td>\n","      <td>...</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>10.8</td>\n","      <td>61.3</td>\n","      <td>9.9</td>\n","      <td>2020</td>\n","    </tr>\n","    <tr>\n","      <th>1788</th>\n","      <td>2020-04-04</td>\n","      <td>17847</td>\n","      <td>17053</td>\n","      <td>Saturday</td>\n","      <td>2020</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td></td>\n","      <td>2020-04-04</td>\n","      <td>...</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>14.1</td>\n","      <td>91.3</td>\n","      <td>9.9</td>\n","      <td>2020</td>\n","    </tr>\n","    <tr>\n","      <th>1789</th>\n","      <td>2020-04-03</td>\n","      <td>41436</td>\n","      <td>40117</td>\n","      <td>Friday</td>\n","      <td>2020</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td></td>\n","      <td>2020-04-03</td>\n","      <td>...</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>26.5</td>\n","      <td>38.3</td>\n","      <td>9.9</td>\n","      <td>2020</td>\n","    </tr>\n","    <tr>\n","      <th>1790</th>\n","      <td>2020-04-02</td>\n","      <td>40610</td>\n","      <td>39315</td>\n","      <td>Thursday</td>\n","      <td>2020</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td></td>\n","      <td>2020-04-02</td>\n","      <td>...</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>26.2</td>\n","      <td>21.5</td>\n","      <td>9.9</td>\n","      <td>2020</td>\n","    </tr>\n","    <tr>\n","      <th>1791</th>\n","      <td>2020-04-01</td>\n","      <td>41915</td>\n","      <td>40766</td>\n","      <td>Wednesday</td>\n","      <td>2020</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td></td>\n","      <td>2020-04-01</td>\n","      <td>...</td>\n","      <td>0.012</td>\n","      <td>100</td>\n","      <td>0</td>\n","      <td>4.17</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>16.6</td>\n","      <td>76.5</td>\n","      <td>9.9</td>\n","      <td>2020</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1792 rows Ã— 28 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e81f38c5-c3c1-4d90-b282-d08547e5179f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e81f38c5-c3c1-4d90-b282-d08547e5179f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e81f38c5-c3c1-4d90-b282-d08547e5179f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f8ec61ac-d16e-48f5-b5b9-844a3e635350\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f8ec61ac-d16e-48f5-b5b9-844a3e635350')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f8ec61ac-d16e-48f5-b5b9-844a3e635350 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_0f3ca0be-819d-4cfe-9020-96ffa10813f6\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_ridership_weather')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_0f3ca0be-819d-4cfe-9020-96ffa10813f6 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_ridership_weather');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_ridership_weather"}},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["df_ridership_weather.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hxkz10kPHBA-","executionInfo":{"status":"ok","timestamp":1741326529524,"user_tz":300,"elapsed":6,"user":{"displayName":"Shuo-An Wu","userId":"11531299363119736107"}},"outputId":"6dbaa5d5-e3d9-4433-c48b-3b8c0b98d7b4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Date', 'Entries', 'Exits', 'Day_of_Week', 'Year_x', 'Month', 'Weekday',\n","       'Holiday', 'HolidayName', 'days__datetime', 'days_day_of_week',\n","       'days__tempmax', 'days__tempmin', 'days__temp', 'days__feelslikemax',\n","       'days__feelslikemin', 'days__feelslike', 'days_has_rain',\n","       'days__precip', 'days__precipprob', 'days_has_snow',\n","       'days__precipcover', 'days__snow', 'days__snowdepth', 'days__windspeed',\n","       'days__cloudcover', 'days__visibility', 'Year_y'],\n","      dtype='object')"]},"metadata":{},"execution_count":43}]},{"cell_type":"markdown","source":["## Data cleaning for ridership_weather data"],"metadata":{"id":"vQ1n_UPmBTBJ"}},{"cell_type":"code","source":["df_ridership_weather.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":962},"id":"YCz3Qo8uJlfo","executionInfo":{"status":"ok","timestamp":1741326554602,"user_tz":300,"elapsed":33,"user":{"displayName":"Shuo-An Wu","userId":"11531299363119736107"}},"outputId":"ad0f5c7e-7841-40e6-c8ec-e1f9c9017f1f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Date                    0\n","Entries                 0\n","Exits                   0\n","Day_of_Week             0\n","Year_x                  0\n","Month                   0\n","Weekday                 0\n","Holiday                 0\n","HolidayName             0\n","days__datetime          0\n","days_day_of_week        0\n","days__tempmax           0\n","days__tempmin           0\n","days__temp              0\n","days__feelslikemax      0\n","days__feelslikemin      0\n","days__feelslike         0\n","days_has_rain           0\n","days__precip            0\n","days__precipprob        0\n","days_has_snow           0\n","days__precipcover       0\n","days__snow            787\n","days__snowdepth       746\n","days__windspeed         0\n","days__cloudcover        0\n","days__visibility        0\n","Year_y                  0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Date</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Entries</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Exits</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Day_of_Week</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Year_x</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Month</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Weekday</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Holiday</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>HolidayName</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>days__datetime</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>days_day_of_week</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>days__tempmax</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>days__tempmin</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>days__temp</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>days__feelslikemax</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>days__feelslikemin</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>days__feelslike</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>days_has_rain</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>days__precip</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>days__precipprob</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>days_has_snow</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>days__precipcover</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>days__snow</th>\n","      <td>787</td>\n","    </tr>\n","    <tr>\n","      <th>days__snowdepth</th>\n","      <td>746</td>\n","    </tr>\n","    <tr>\n","      <th>days__windspeed</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>days__cloudcover</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>days__visibility</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Year_y</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":44}]},{"cell_type":"markdown","source":["- fill NA with 0.0 for `days__snow` and `days__snowdepth`"],"metadata":{"id":"IKHVLdVUBdKl"}},{"cell_type":"code","source":["df_ridership_weather = df_ridership_weather.drop(['days__datetime', 'days_day_of_week', 'Year_y'], axis=1)\n","df_ridership_weather['days__snow'] = df_ridership_weather['days__snow'].fillna(0.0)\n","df_ridership_weather['days__snowdepth'] = df_ridership_weather['days__snowdepth'].fillna(0.0)"],"metadata":{"id":"pIBWslAEJy-o"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["- Rename columns that start with `'days__'`"],"metadata":{"id":"XO2DvOHLBsr2"}},{"cell_type":"code","source":["# Rename columns that start with 'days__'\n","for col in df_ridership_weather.columns:\n","    if col.startswith('days__'):\n","        new_col = col[6:]  # Remove 'days__' prefix\n","        df_ridership_weather = df_ridership_weather.rename(columns={col: new_col})\n","# Rename Year_x\n","df_ridership_weather = df_ridership_weather.rename(columns={'Year_x':'Year', 'days_has_rain':'has_rain', 'days_has_snow':'has_snow'})\n","df_ridership_weather"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":617},"id":"iF3nvEkhKkMb","executionInfo":{"status":"ok","timestamp":1741327036953,"user_tz":300,"elapsed":44,"user":{"displayName":"Shuo-An Wu","userId":"11531299363119736107"}},"outputId":"f0a9440d-cdc8-4f26-cb86-074ad7e84615"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Date  Entries   Exits Day_of_Week  Year  Month  Weekday  Holiday  \\\n","0    2025-02-25   513640  510965     Tuesday  2025      2        1        0   \n","1    2025-02-24   431077  430097      Monday  2025      2        1        0   \n","2    2025-02-23   191879  192449      Sunday  2025      2        0        0   \n","3    2025-02-22   245046  245686    Saturday  2025      2        0        0   \n","4    2025-02-21   378902  378789      Friday  2025      2        1        0   \n","...         ...      ...     ...         ...   ...    ...      ...      ...   \n","1787 2020-04-05    14165   13485      Sunday  2020      4        0        0   \n","1788 2020-04-04    17847   17053    Saturday  2020      4        0        0   \n","1789 2020-04-03    41436   40117      Friday  2020      4        1        0   \n","1790 2020-04-02    40610   39315    Thursday  2020      4        1        0   \n","1791 2020-04-01    41915   40766   Wednesday  2020      4        1        0   \n","\n","     HolidayName  tempmax  ...  has_rain  precip  precipprob  has_snow  \\\n","0                    67.7  ...         0   0.000           0         0   \n","1                    56.9  ...         0   0.000           0         0   \n","2                    53.6  ...         0   0.000           0         0   \n","3                    42.9  ...         0   0.000           0         0   \n","4                    40.6  ...         0   0.000           0         0   \n","...          ...      ...  ...       ...     ...         ...       ...   \n","1787                 68.0  ...         0   0.000           0         0   \n","1788                 58.8  ...         0   0.000           0         0   \n","1789                 66.7  ...         0   0.000           0         0   \n","1790                 62.7  ...         0   0.000           0         0   \n","1791                 55.9  ...         1   0.012         100         0   \n","\n","      precipcover  snow  snowdepth  windspeed  cloudcover  visibility  \n","0            0.00   0.0        0.0       12.2        59.6         9.9  \n","1            0.00   0.0        0.0       12.7        70.3         9.9  \n","2            0.00   0.0        0.0       12.5        36.3         9.9  \n","3            0.00   0.0        0.0       15.3        44.1         9.9  \n","4            0.00   0.0        0.0       22.5        17.3         9.9  \n","...           ...   ...        ...        ...         ...         ...  \n","1787         0.00   0.0        0.0       10.8        61.3         9.9  \n","1788         0.00   0.0        0.0       14.1        91.3         9.9  \n","1789         0.00   0.0        0.0       26.5        38.3         9.9  \n","1790         0.00   0.0        0.0       26.2        21.5         9.9  \n","1791         4.17   0.0        0.0       16.6        76.5         9.9  \n","\n","[1792 rows x 25 columns]"],"text/html":["\n","  <div id=\"df-1a6cb309-2fdb-400f-bb46-0624c9210aa2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Entries</th>\n","      <th>Exits</th>\n","      <th>Day_of_Week</th>\n","      <th>Year</th>\n","      <th>Month</th>\n","      <th>Weekday</th>\n","      <th>Holiday</th>\n","      <th>HolidayName</th>\n","      <th>tempmax</th>\n","      <th>...</th>\n","      <th>has_rain</th>\n","      <th>precip</th>\n","      <th>precipprob</th>\n","      <th>has_snow</th>\n","      <th>precipcover</th>\n","      <th>snow</th>\n","      <th>snowdepth</th>\n","      <th>windspeed</th>\n","      <th>cloudcover</th>\n","      <th>visibility</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2025-02-25</td>\n","      <td>513640</td>\n","      <td>510965</td>\n","      <td>Tuesday</td>\n","      <td>2025</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td></td>\n","      <td>67.7</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>12.2</td>\n","      <td>59.6</td>\n","      <td>9.9</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2025-02-24</td>\n","      <td>431077</td>\n","      <td>430097</td>\n","      <td>Monday</td>\n","      <td>2025</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td></td>\n","      <td>56.9</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>12.7</td>\n","      <td>70.3</td>\n","      <td>9.9</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2025-02-23</td>\n","      <td>191879</td>\n","      <td>192449</td>\n","      <td>Sunday</td>\n","      <td>2025</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td></td>\n","      <td>53.6</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>12.5</td>\n","      <td>36.3</td>\n","      <td>9.9</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2025-02-22</td>\n","      <td>245046</td>\n","      <td>245686</td>\n","      <td>Saturday</td>\n","      <td>2025</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td></td>\n","      <td>42.9</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>15.3</td>\n","      <td>44.1</td>\n","      <td>9.9</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2025-02-21</td>\n","      <td>378902</td>\n","      <td>378789</td>\n","      <td>Friday</td>\n","      <td>2025</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td></td>\n","      <td>40.6</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>22.5</td>\n","      <td>17.3</td>\n","      <td>9.9</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1787</th>\n","      <td>2020-04-05</td>\n","      <td>14165</td>\n","      <td>13485</td>\n","      <td>Sunday</td>\n","      <td>2020</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td></td>\n","      <td>68.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>10.8</td>\n","      <td>61.3</td>\n","      <td>9.9</td>\n","    </tr>\n","    <tr>\n","      <th>1788</th>\n","      <td>2020-04-04</td>\n","      <td>17847</td>\n","      <td>17053</td>\n","      <td>Saturday</td>\n","      <td>2020</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td></td>\n","      <td>58.8</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>14.1</td>\n","      <td>91.3</td>\n","      <td>9.9</td>\n","    </tr>\n","    <tr>\n","      <th>1789</th>\n","      <td>2020-04-03</td>\n","      <td>41436</td>\n","      <td>40117</td>\n","      <td>Friday</td>\n","      <td>2020</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td></td>\n","      <td>66.7</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>26.5</td>\n","      <td>38.3</td>\n","      <td>9.9</td>\n","    </tr>\n","    <tr>\n","      <th>1790</th>\n","      <td>2020-04-02</td>\n","      <td>40610</td>\n","      <td>39315</td>\n","      <td>Thursday</td>\n","      <td>2020</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td></td>\n","      <td>62.7</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>26.2</td>\n","      <td>21.5</td>\n","      <td>9.9</td>\n","    </tr>\n","    <tr>\n","      <th>1791</th>\n","      <td>2020-04-01</td>\n","      <td>41915</td>\n","      <td>40766</td>\n","      <td>Wednesday</td>\n","      <td>2020</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td></td>\n","      <td>55.9</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0.012</td>\n","      <td>100</td>\n","      <td>0</td>\n","      <td>4.17</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>16.6</td>\n","      <td>76.5</td>\n","      <td>9.9</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1792 rows Ã— 25 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1a6cb309-2fdb-400f-bb46-0624c9210aa2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1a6cb309-2fdb-400f-bb46-0624c9210aa2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1a6cb309-2fdb-400f-bb46-0624c9210aa2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5b1726fc-5593-48ad-9dd6-0e245ba36839\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5b1726fc-5593-48ad-9dd6-0e245ba36839')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5b1726fc-5593-48ad-9dd6-0e245ba36839 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_d87f0e0e-f781-46be-a4e2-299c2a90e7d5\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_ridership_weather')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_d87f0e0e-f781-46be-a4e2-299c2a90e7d5 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_ridership_weather');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_ridership_weather"}},"metadata":{},"execution_count":48}]},{"cell_type":"code","source":["df_ridership_weather.to_csv('/content/drive/MyDrive/Colab Notebooks/df_ridership_weather.csv', index=False)"],"metadata":{"id":"LhZ-M7CALhdf"},"execution_count":null,"outputs":[]}]}